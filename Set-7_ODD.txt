Set-7 (ODD)

1)

Here is how to implement the News Recommendation System in Neo4j and the Cypher queries for the tasks:

Step 1: Create Nodes and Relationships
Create User Nodes
CREATE (:User {name: 'Aditya', age: 31, city: 'Bengaluru'}),
       (:User {name: 'Neha', age: 27, city: 'Chennai'}),
       (:User {name: 'Raj', age: 35, city: 'Jaipur'}),
       (:User {name: 'Sneha', age: 29, city: 'Hyderabad'}),
       (:User {name: 'Varun', age: 24, city: 'Pune'});
Create Article Nodes
CREATE (:Article {title: 'Budget 2024 Highlights', author: 'Ramesh Kumar', publish_year: 2024}),
       (:Article {title: 'Climate Change Effects', author: 'Priya Mehta', publish_year: 2023}),
       (:Article {title: 'IPL 2023 Wrap-up', author: 'Vikram Sharma', publish_year: 2023}),
       (:Article {title: 'New Tech Trends in AI', author: 'Aditi Singh', publish_year: 2024});
Create Category Nodes
CREATE (:Category {name: 'Politics'}),
       (:Category {name: 'Technology'});
Connect Articles to Categories
MATCH (a:Article {title: 'Budget 2024 Highlights'}), (c:Category {name: 'Politics'})
CREATE (a)-[:BELONGS_TO]->(c);

MATCH (a:Article {title: 'IPL 2023 Wrap-up'}), (c:Category {name: 'Politics'})
CREATE (a)-[:BELONGS_TO]->(c);

MATCH (a:Article {title: 'Climate Change Effects'}), (c:Category {name: 'Technology'})
CREATE (a)-[:BELONGS_TO]->(c);

MATCH (a:Article {title: 'New Tech Trends in AI'}), (c:Category {name: 'Technology'})
CREATE (a)-[:BELONGS_TO]->(c);
Connect Users to Articles They Read (with Ratings)
MATCH (u:User {name: 'Aditya'}), (a:Article {title: 'Budget 2024 Highlights'})
CREATE (u)-[:READ {rating: 5}]->(a);

MATCH (u:User {name: 'Neha'}), (a:Article {title: 'Climate Change Effects'})
CREATE (u)-[:READ {rating: 4}]->(a);

MATCH (u:User {name: 'Raj'}), (a:Article {title: 'IPL 2023 Wrap-up'})
CREATE (u)-[:READ {rating: 5}]->(a);

MATCH (u:User {name: 'Sneha'}), (a:Article {title: 'New Tech Trends in AI'})
CREATE (u)-[:READ {rating: 4}]->(a);

MATCH (u:User {name: 'Varun'}), (a:Article {title: 'Budget 2024 Highlights'})
CREATE (u)-[:READ {rating: 4}]->(a);
Create FOLLOWS Relationships Between Users
MATCH (u1:User {name: 'Aditya'}), (u2:User {name: 'Neha'})
CREATE (u1)-[:FOLLOWS]->(u2);

MATCH (u1:User {name: 'Raj'}), (u2:User {name: 'Varun'})
CREATE (u1)-[:FOLLOWS]->(u2);

MATCH (u1:User {name: 'Sneha'}), (u2:User {name: 'Aditya'})
CREATE (u1)-[:FOLLOWS]->(u2);

Step 2: Write Queries
1. Which articles has Aditya read, and what ratings did he give?
MATCH (u:User {name: 'Aditya'})-[r:READ]->(a:Article)
RETURN a.title AS Article, r.rating AS Rating;

2. List all technology articles along with the users who read them and their ratings.
MATCH (c:Category {name: 'Technology'})<-[:BELONGS_TO]-(a:Article)<-[r:READ]-(u:User)
RETURN a.title AS Article, u.name AS User, r.rating AS Rating;

3. Who are the followers of Sneha, and what articles have they read?
MATCH (u:User)-[:FOLLOWS]->(s:User {name: 'Sneha'}),
      (u)-[r:READ]->(a:Article)
RETURN u.name AS Follower, a.title AS ArticleRead, r.rating AS Rating;

Explanation of Queries
    1. Query 1:
        ◦ Finds READ relationships from Aditya to articles and retrieves the article title and rating. 
    2. Query 2:
        ◦ Matches articles belonging to the "Technology" category. 
        ◦ Finds READ relationships from users to those articles and retrieves the article title, user name, and rating. 
    3. Query 3:
        ◦ Matches users who follow Sneha. 
        ◦ Finds READ relationships from these followers to articles, retrieving the follower's name, articles read, and ratings. 
These queries can be used to generate insights and recommendations for the news system.


2)

Here’s a step-by-step guide to creating a Power BI dashboard for the healthcare organization using the dataset provided.

Step 1: Prepare the Dataset
    1. Download the Dataset
Access the dataset from the provided link and save it as a CSV or Excel file.
    2. Open Power BI Desktop
        ◦ Launch Power BI Desktop and go to the Home tab. 
    3. Import the Dataset
        ◦ Click on Get Data > Excel (or CSV, depending on your file format). 
        ◦ Select the downloaded file and load the data into Power BI. 
    4. Inspect and Clean Data
        ◦ Open the Data View and ensure all columns are correctly imported. 
        ◦ Handle missing values, incorrect data types, or duplicates in the Power Query Editor if necessary. 

Step 2: Define Relationships
    1. Go to the Model View.
        ◦ Verify and create relationships between tables if the dataset has multiple tables. 
        ◦ Typically, FacilityID, PatientID, and DoctorID will act as primary/foreign keys. 
    2. If the dataset is a flat file, no relationships need to be established.

Step 3: Create the Dashboard Visuals
1. Top Doctors by Admissions and Treatment Cost
    • Visual Type: Bar Chart 
    • Steps: 
        1. Add a Bar Chart from the Visualizations pane. 
        2. Drag DoctorName into the Axis field. 
        3. Drag AdmissionID into the Values field and set it to Count. 
        4. Drag TreatmentCost into the Values field and set it to Sum. 
        5. Use the Data Colors option to differentiate admissions and costs visually. 

2. Bed Utilization by Bed Type Across Facilities
    • Visual Type: Clustered Column Chart 
    • Steps: 
        1. Add a Clustered Column Chart from the Visualizations pane. 
        2. Drag BedType into the Axis field. 
        3. Drag FacilityName into the Legend field. 
        4. Drag BedDaysUtilized into the Values field and set it to Sum. 
        5. Customize the chart for clear representation of bed utilization by type. 

3. Facility Bed Utilization Heatmap
    • Visual Type: Heatmap (Requires Custom Visualization) 
    • Steps: 
        1. Import a custom heatmap visual from the Marketplace (accessible from the Visualizations pane). 
        2. Drag FacilityName into the Rows field. 
        3. Drag BedDaysUtilized into the Values field. 
        4. Set a color gradient to represent utilization rates. 

4. Total Treatment Cost by Facility
    • Visual Type: Column Chart 
    • Steps: 
        1. Add a Column Chart from the Visualizations pane. 
        2. Drag FacilityName into the Axis field. 
        3. Drag TreatmentCost into the Values field and set it to Sum. 
        4. Use data labels to display the total cost for each facility. 

5. Average Treatment Cost per Admission
    • Visual Type: KPI or Gauge 
    • Steps: 
        1. Add a KPI or Gauge visual. 
        2. Drag a calculated field into the Indicator field: 
            ▪ Create a new calculated column or measure in the Data View: 
              AverageTreatmentCost = SUM(TreatmentCost) / COUNT(AdmissionID)
        3. Use the calculated AverageTreatmentCost as the Indicator value. 
        4. Set thresholds if using a gauge to define performance ranges. 

Step 4: Finalize and Format the Dashboard
    1. Add Titles and Labels
        ◦ Use text boxes to add clear titles for each visual. 
    2. Format Visuals
        ◦ Use the Formatting Pane to adjust colors, axis labels, and data labels for clarity. 
    3. Add Filters
        ◦ Include slicers for filtering data by Region, FacilityName, or Specialization. 
    4. Arrange Visuals
        ◦ Drag visuals onto the canvas to organize them into a dashboard layout. 

Step 5: Publish the Dashboard
    1. Save your work locally. 
    2. Click on Publish from the Home tab. 
    3. Select a workspace in Power BI Service and upload the dashboard. 
    4. Share the dashboard with stakeholders by granting access through the Power BI Service. 

Summary of Visuals:
Portion
Visual Type
Metrics
Top Doctors
Bar Chart
Doctor admissions count and total treatment cost
Bed Utilization by Bed Type
Clustered Column Chart
Sum of bed days by type and facility
Facility Bed Utilization Heatmap
Heatmap
Facility bed utilization rates
Total Treatment Cost by Facility
Column Chart
Sum of treatment costs per facility
Avg. Treatment Cost per Admission
KPI or Gauge
Average cost per admission
With these steps, you'll have a functional Power BI dashboard for healthcare performance monitoring.

